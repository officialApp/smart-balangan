{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@firebase/analytics/dist/index.esm.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutProperties","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_typeof","obj","Symbol","iterator","constructor","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread2","forEach","defineProperty","getOwnPropertyDescriptors","defineProperties","_defineProperty","configurable","writable","_defineProperties","props","descriptor","_createClass","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","GtagCommand","EventName","GA_FID_KEY","ORIGIN_KEY","FETCH_TIMEOUT_MILLIS","DYNAMIC_CONFIG_URL","GTAG_URL","logEvent","gtagFunction","initializationPromise","eventName","eventParams","options","measurementId","params","_a","label","global","EVENT","sent","setCurrentScreen","screenName","SET","CONFIG","update","setUserId","id","setUserProperties","properties","flatProperties","_i","_b","setAnalyticsCollectionEnabled","enabled","window","logger","insertScriptTag","dataLayerName","script","document","createElement","src","async","head","appendChild","getOrCreateDataLayer","dataLayer","Array","isArray","gtagOnConfig","gtagCore","initializationPromisesMap","dynamicConfigPromisesList","measurementIdToAppId","gtagParams","correspondingAppId","dynamicConfigResults","foundConfig","e_1","trys","all","find","config","appId","gtagOnEvent","initializationPromisesToWaitFor","gaSendToList","_loop_1","gaSendToList_1","sendToId","state_1","e_2","values","wrapGtag","gtagWrapper","command","idOrNameOrParams","e_3","wrapOrCreateGtag","gtagFunctionName","_args","wrappedGtag","findGtagScriptOnPage","scriptTags","getElementsByTagName","tag","includes","ERRORS","ERROR_FACTORY","LONG_RETRY_FACTOR","BASE_INTERVAL_MILLIS","RetryData","throttleMetadata","intervalMillis","getThrottleMetadata","setThrottleMetadata","metadata","deleteThrottleMetadata","defaultRetryData","getHeaders","apiKey","Headers","Accept","fetchDynamicConfig","appFields","request","appUrl","response","errorMessage","jsonResponse","method","headers","replace","fetch","status","json","message","create","httpStatus","responseMessage","fetchDynamicConfigWithRetry","app","retryData","timeoutMillis","signal","_this","backoffCount","throttleEndTimeMillis","Date","now","AnalyticsAbortSignal","setTimeout","abort","attemptFetchDynamicConfigWithRetry","backoffMillis","setAbortableTimeout","warn","isRetriableError","Number","debug","Math","max","timeout","addEventListener","clearTimeout","e","listeners","listener","validateIndexedDB","errorInfo","initializeIds","installations","dynamicConfigPromise","fidPromise","dynamicConfig","fid","configProperties","_c","catch","envIsValid","getId","gtagCoreFunction","wrappedGtagFunction","gtagName","globalInitDone","resetGlobalVars","newGlobalInitDone","newInitializationPromisesMap","newDynamicPromises","getGlobalVars","settings","warnOnBrowserContextMismatch","mismatchedEnvMessages","details","map","index","join","factory","analyticsInstance","INTERNAL","delete","name","version","ANALYTICS_TYPE","registerAnalytics","internalFactory","container","analytics","getProvider","getImmediate","reason","registerComponent","setServiceProps","isSupported","registerVersion","isDBOpenable"],"mappings":"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","file":"js/chunk-vendors~0f485567.8e0b13bf.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { __awaiter, __generator, __assign } from 'tslib';\nimport firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { Logger } from '@firebase/logger';\nimport { ErrorFactory, calculateBackoffMillis, FirebaseError, validateIndexedDBOpenable, isIndexedDBAvailable, isBrowserExtension, areCookiesEnabled } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Key to attach FID to in gtag params.\r\nvar GA_FID_KEY = 'firebase_id';\r\nvar ORIGIN_KEY = 'origin';\r\nvar FETCH_TIMEOUT_MILLIS = 60 * 1000;\r\nvar DYNAMIC_CONFIG_URL = 'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig';\r\nvar GTAG_URL = 'https://www.googletagmanager.com/gtag/js';\r\nvar GtagCommand;\r\n(function (GtagCommand) {\r\n    GtagCommand[\"EVENT\"] = \"event\";\r\n    GtagCommand[\"SET\"] = \"set\";\r\n    GtagCommand[\"CONFIG\"] = \"config\";\r\n})(GtagCommand || (GtagCommand = {}));\r\n/*\r\n * Officially recommended event names for gtag.js\r\n * Any other string is also allowed.\r\n */\r\nvar EventName;\r\n(function (EventName) {\r\n    EventName[\"ADD_SHIPPING_INFO\"] = \"add_shipping_info\";\r\n    EventName[\"ADD_PAYMENT_INFO\"] = \"add_payment_info\";\r\n    EventName[\"ADD_TO_CART\"] = \"add_to_cart\";\r\n    EventName[\"ADD_TO_WISHLIST\"] = \"add_to_wishlist\";\r\n    EventName[\"BEGIN_CHECKOUT\"] = \"begin_checkout\";\r\n    /** @deprecated */\r\n    EventName[\"CHECKOUT_PROGRESS\"] = \"checkout_progress\";\r\n    EventName[\"EXCEPTION\"] = \"exception\";\r\n    EventName[\"GENERATE_LEAD\"] = \"generate_lead\";\r\n    EventName[\"LOGIN\"] = \"login\";\r\n    EventName[\"PAGE_VIEW\"] = \"page_view\";\r\n    EventName[\"PURCHASE\"] = \"purchase\";\r\n    EventName[\"REFUND\"] = \"refund\";\r\n    EventName[\"REMOVE_FROM_CART\"] = \"remove_from_cart\";\r\n    EventName[\"SCREEN_VIEW\"] = \"screen_view\";\r\n    EventName[\"SEARCH\"] = \"search\";\r\n    EventName[\"SELECT_CONTENT\"] = \"select_content\";\r\n    EventName[\"SELECT_ITEM\"] = \"select_item\";\r\n    EventName[\"SELECT_PROMOTION\"] = \"select_promotion\";\r\n    /** @deprecated */\r\n    EventName[\"SET_CHECKOUT_OPTION\"] = \"set_checkout_option\";\r\n    EventName[\"SHARE\"] = \"share\";\r\n    EventName[\"SIGN_UP\"] = \"sign_up\";\r\n    EventName[\"TIMING_COMPLETE\"] = \"timing_complete\";\r\n    EventName[\"VIEW_CART\"] = \"view_cart\";\r\n    EventName[\"VIEW_ITEM\"] = \"view_item\";\r\n    EventName[\"VIEW_ITEM_LIST\"] = \"view_item_list\";\r\n    EventName[\"VIEW_PROMOTION\"] = \"view_promotion\";\r\n    EventName[\"VIEW_SEARCH_RESULTS\"] = \"view_search_results\";\r\n})(EventName || (EventName = {}));\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Logs an analytics event through the Firebase SDK.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\r\n * @param eventParams Analytics event parameters.\r\n */\r\nfunction logEvent(gtagFunction, initializationPromise, eventName, eventParams, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var measurementId, params;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!(options && options.global)) return [3 /*break*/, 1];\r\n                    gtagFunction(GtagCommand.EVENT, eventName, eventParams);\r\n                    return [2 /*return*/];\r\n                case 1: return [4 /*yield*/, initializationPromise];\r\n                case 2:\r\n                    measurementId = _a.sent();\r\n                    params = __assign(__assign({}, eventParams), { 'send_to': measurementId });\r\n                    gtagFunction(GtagCommand.EVENT, eventName, params);\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Set screen_name parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param screenName Screen name string to set.\r\n */\r\nfunction setCurrentScreen(gtagFunction, initializationPromise, screenName, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var measurementId;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!(options && options.global)) return [3 /*break*/, 1];\r\n                    gtagFunction(GtagCommand.SET, { 'screen_name': screenName });\r\n                    return [2 /*return*/, Promise.resolve()];\r\n                case 1: return [4 /*yield*/, initializationPromise];\r\n                case 2:\r\n                    measurementId = _a.sent();\r\n                    gtagFunction(GtagCommand.CONFIG, measurementId, {\r\n                        update: true,\r\n                        'screen_name': screenName\r\n                    });\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Set user_id parameter for this Google Analytics ID.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param id User ID string to set\r\n */\r\nfunction setUserId(gtagFunction, initializationPromise, id, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var measurementId;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!(options && options.global)) return [3 /*break*/, 1];\r\n                    gtagFunction(GtagCommand.SET, { 'user_id': id });\r\n                    return [2 /*return*/, Promise.resolve()];\r\n                case 1: return [4 /*yield*/, initializationPromise];\r\n                case 2:\r\n                    measurementId = _a.sent();\r\n                    gtagFunction(GtagCommand.CONFIG, measurementId, {\r\n                        update: true,\r\n                        'user_id': id\r\n                    });\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Set all other user properties other than user_id and screen_name.\r\n *\r\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\r\n * @param properties Map of user properties to set\r\n */\r\nfunction setUserProperties(gtagFunction, initializationPromise, properties, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var flatProperties, _i, _a, key, measurementId;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    if (!(options && options.global)) return [3 /*break*/, 1];\r\n                    flatProperties = {};\r\n                    for (_i = 0, _a = Object.keys(properties); _i < _a.length; _i++) {\r\n                        key = _a[_i];\r\n                        // use dot notation for merge behavior in gtag.js\r\n                        flatProperties[\"user_properties.\" + key] = properties[key];\r\n                    }\r\n                    gtagFunction(GtagCommand.SET, flatProperties);\r\n                    return [2 /*return*/, Promise.resolve()];\r\n                case 1: return [4 /*yield*/, initializationPromise];\r\n                case 2:\r\n                    measurementId = _b.sent();\r\n                    gtagFunction(GtagCommand.CONFIG, measurementId, {\r\n                        update: true,\r\n                        'user_properties': properties\r\n                    });\r\n                    _b.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Set whether collection is enabled for this ID.\r\n *\r\n * @param enabled If true, collection is enabled for this ID.\r\n */\r\nfunction setAnalyticsCollectionEnabled(initializationPromise, enabled) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var measurementId;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, initializationPromise];\r\n                case 1:\r\n                    measurementId = _a.sent();\r\n                    window[\"ga-disable-\" + measurementId] = !enabled;\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger = new Logger('@firebase/analytics');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Inserts gtag script tag into the page to asynchronously download gtag.\r\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\r\n */\r\nfunction insertScriptTag(dataLayerName) {\r\n    var script = document.createElement('script');\r\n    // We are not providing an analyticsId in the URL because it would trigger a `page_view`\r\n    // without fid. We will initialize ga-id using gtag (config) command together with fid.\r\n    script.src = GTAG_URL + \"?l=\" + dataLayerName;\r\n    script.async = true;\r\n    document.head.appendChild(script);\r\n}\r\n/**\r\n * Get reference to, or create, global datalayer.\r\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\r\n */\r\nfunction getOrCreateDataLayer(dataLayerName) {\r\n    // Check for existing dataLayer and create if needed.\r\n    var dataLayer = [];\r\n    if (Array.isArray(window[dataLayerName])) {\r\n        dataLayer = window[dataLayerName];\r\n    }\r\n    else {\r\n        window[dataLayerName] = dataLayer;\r\n    }\r\n    return dataLayer;\r\n}\r\n/**\r\n * Wrapped gtag logic when gtag is called with 'config' command.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n * @param measurementId GA Measurement ID to set config for.\r\n * @param gtagParams Gtag config params to set.\r\n */\r\nfunction gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, measurementId, gtagParams) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var correspondingAppId, dynamicConfigResults, foundConfig, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    correspondingAppId = measurementIdToAppId[measurementId];\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 7, , 8]);\r\n                    if (!correspondingAppId) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, initializationPromisesMap[correspondingAppId]];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 3: return [4 /*yield*/, Promise.all(dynamicConfigPromisesList)];\r\n                case 4:\r\n                    dynamicConfigResults = _a.sent();\r\n                    foundConfig = dynamicConfigResults.find(function (config) { return config.measurementId === measurementId; });\r\n                    if (!foundConfig) return [3 /*break*/, 6];\r\n                    return [4 /*yield*/, initializationPromisesMap[foundConfig.appId]];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [3 /*break*/, 8];\r\n                case 7:\r\n                    e_1 = _a.sent();\r\n                    logger.error(e_1);\r\n                    return [3 /*break*/, 8];\r\n                case 8:\r\n                    gtagCore(GtagCommand.CONFIG, measurementId, gtagParams);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Wrapped gtag logic when gtag is called with 'event' command.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementId GA Measurement ID to log event to.\r\n * @param gtagParams Params to log with this event.\r\n */\r\nfunction gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementId, gtagParams) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var initializationPromisesToWaitFor, gaSendToList, dynamicConfigResults, _loop_1, _i, gaSendToList_1, sendToId, state_1, e_2;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 4, , 5]);\r\n                    initializationPromisesToWaitFor = [];\r\n                    if (!(gtagParams && gtagParams['send_to'])) return [3 /*break*/, 2];\r\n                    gaSendToList = gtagParams['send_to'];\r\n                    // Make it an array if is isn't, so it can be dealt with the same way.\r\n                    if (!Array.isArray(gaSendToList)) {\r\n                        gaSendToList = [gaSendToList];\r\n                    }\r\n                    return [4 /*yield*/, Promise.all(dynamicConfigPromisesList)];\r\n                case 1:\r\n                    dynamicConfigResults = _a.sent();\r\n                    _loop_1 = function (sendToId) {\r\n                        // Any fetched dynamic measurement ID that matches this 'send_to' ID\r\n                        var foundConfig = dynamicConfigResults.find(function (config) { return config.measurementId === sendToId; });\r\n                        var initializationPromise = foundConfig && initializationPromisesMap[foundConfig.appId];\r\n                        if (initializationPromise) {\r\n                            initializationPromisesToWaitFor.push(initializationPromise);\r\n                        }\r\n                        else {\r\n                            // Found an item in 'send_to' that is not associated\r\n                            // directly with an FID, possibly a group.  Empty this array,\r\n                            // exit the loop early, and let it get populated below.\r\n                            initializationPromisesToWaitFor = [];\r\n                            return \"break\";\r\n                        }\r\n                    };\r\n                    for (_i = 0, gaSendToList_1 = gaSendToList; _i < gaSendToList_1.length; _i++) {\r\n                        sendToId = gaSendToList_1[_i];\r\n                        state_1 = _loop_1(sendToId);\r\n                        if (state_1 === \"break\")\r\n                            break;\r\n                    }\r\n                    _a.label = 2;\r\n                case 2:\r\n                    // This will be unpopulated if there was no 'send_to' field , or\r\n                    // if not all entries in the 'send_to' field could be mapped to\r\n                    // a FID. In these cases, wait on all pending initialization promises.\r\n                    if (initializationPromisesToWaitFor.length === 0) {\r\n                        initializationPromisesToWaitFor = Object.values(initializationPromisesMap);\r\n                    }\r\n                    // Run core gtag function with args after all relevant initialization\r\n                    // promises have been resolved.\r\n                    return [4 /*yield*/, Promise.all(initializationPromisesToWaitFor)];\r\n                case 3:\r\n                    // Run core gtag function with args after all relevant initialization\r\n                    // promises have been resolved.\r\n                    _a.sent();\r\n                    // Workaround for http://b/141370449 - third argument cannot be undefined.\r\n                    gtagCore(GtagCommand.EVENT, measurementId, gtagParams || {});\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    e_2 = _a.sent();\r\n                    logger.error(e_2);\r\n                    return [3 /*break*/, 5];\r\n                case 5: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Wraps a standard gtag function with extra code to wait for completion of\r\n * relevant initialization promises before sending requests.\r\n *\r\n * @param gtagCore Basic gtag function that just appends to dataLayer.\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n */\r\nfunction wrapGtag(gtagCore, \r\n/**\r\n * Allows wrapped gtag calls to wait on whichever intialization promises are required,\r\n * depending on the contents of the gtag params' `send_to` field, if any.\r\n */\r\ninitializationPromisesMap, \r\n/**\r\n * Wrapped gtag calls sometimes require all dynamic config fetches to have returned\r\n * before determining what initialization promises (which include FIDs) to wait for.\r\n */\r\ndynamicConfigPromisesList, \r\n/**\r\n * Wrapped gtag config calls can narrow down which initialization promise (with FID)\r\n * to wait for if the measurementId is already fetched, by getting the corresponding appId,\r\n * which is the key for the initialization promises map.\r\n */\r\nmeasurementIdToAppId) {\r\n    /**\r\n     * Wrapper around gtag that ensures FID is sent with gtag calls.\r\n     * @param command Gtag command type.\r\n     * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.\r\n     * @param gtagParams Params if event is EVENT/CONFIG.\r\n     */\r\n    function gtagWrapper(command, idOrNameOrParams, gtagParams) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 6, , 7]);\r\n                        if (!(command === GtagCommand.EVENT)) return [3 /*break*/, 2];\r\n                        // If EVENT, second arg must be measurementId.\r\n                        return [4 /*yield*/, gtagOnEvent(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, idOrNameOrParams, gtagParams)];\r\n                    case 1:\r\n                        // If EVENT, second arg must be measurementId.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 2:\r\n                        if (!(command === GtagCommand.CONFIG)) return [3 /*break*/, 4];\r\n                        // If CONFIG, second arg must be measurementId.\r\n                        return [4 /*yield*/, gtagOnConfig(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, idOrNameOrParams, gtagParams)];\r\n                    case 3:\r\n                        // If CONFIG, second arg must be measurementId.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        // If SET, second arg must be params.\r\n                        gtagCore(GtagCommand.SET, idOrNameOrParams);\r\n                        _a.label = 5;\r\n                    case 5: return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_3 = _a.sent();\r\n                        logger.error(e_3);\r\n                        return [3 /*break*/, 7];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    return gtagWrapper;\r\n}\r\n/**\r\n * Creates global gtag function or wraps existing one if found.\r\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\r\n * 'event' calls that belong to the GAID associated with this Firebase instance.\r\n *\r\n * @param initializationPromisesMap Map of appIds to their initialization promises.\r\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\r\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\r\n * @param dataLayerName Name of global GA datalayer array.\r\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified).\r\n */\r\nfunction wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagFunctionName) {\r\n    // Create a basic core gtag function\r\n    var gtagCore = function () {\r\n        var _args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            _args[_i] = arguments[_i];\r\n        }\r\n        // Must push IArguments object, not an array.\r\n        window[dataLayerName].push(arguments);\r\n    };\r\n    // Replace it with existing one if found\r\n    if (window[gtagFunctionName] &&\r\n        typeof window[gtagFunctionName] === 'function') {\r\n        // @ts-ignore\r\n        gtagCore = window[gtagFunctionName];\r\n    }\r\n    window[gtagFunctionName] = wrapGtag(gtagCore, initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId);\r\n    return {\r\n        gtagCore: gtagCore,\r\n        wrappedGtag: window[gtagFunctionName]\r\n    };\r\n}\r\n/**\r\n * Returns first script tag in DOM matching our gtag url pattern.\r\n */\r\nfunction findGtagScriptOnPage() {\r\n    var scriptTags = window.document.getElementsByTagName('script');\r\n    for (var _i = 0, _a = Object.values(scriptTags); _i < _a.length; _i++) {\r\n        var tag = _a[_i];\r\n        if (tag.src && tag.src.includes(GTAG_URL)) {\r\n            return tag;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERRORS = (_a = {},\r\n    _a[\"already-exists\" /* ALREADY_EXISTS */] = 'A Firebase Analytics instance with the appId {$id} ' +\r\n        ' already exists. ' +\r\n        'Only one Firebase Analytics instance can be created for each appId.',\r\n    _a[\"already-initialized\" /* ALREADY_INITIALIZED */] = 'Firebase Analytics has already been initialized.' +\r\n        'settings() must be called before initializing any Analytics instance' +\r\n        'or it will have no effect.',\r\n    _a[\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */] = 'Firebase Analytics Interop Component failed to instantiate: {$reason}',\r\n    _a[\"invalid-analytics-context\" /* INVALID_ANALYTICS_CONTEXT */] = 'Firebase Analytics is not supported in this environment. ' +\r\n        'Wrap initialization of analytics in analytics.isSupported() ' +\r\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\r\n    _a[\"indexeddb-unavailable\" /* INDEXEDDB_UNAVAILABLE */] = 'IndexedDB unavailable or restricted in this environment. ' +\r\n        'Wrap initialization of analytics in analytics.isSupported() ' +\r\n        'to prevent initialization in unsupported environments. Details: {$errorInfo}',\r\n    _a[\"fetch-throttle\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    _a[\"config-fetch-failed\" /* CONFIG_FETCH_FAILED */] = 'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',\r\n    _a[\"no-api-key\" /* NO_API_KEY */] = 'The \"apiKey\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\r\n        'contain a valid API key.',\r\n    _a[\"no-app-id\" /* NO_APP_ID */] = 'The \"appId\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\r\n        'contain a valid app ID.',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory('analytics', 'Analytics', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Backoff factor for 503 errors, which we want to be conservative about\r\n * to avoid overloading servers. Each retry interval will be\r\n * BASE_INTERVAL_MILLIS * LONG_RETRY_FACTOR ^ retryCount, so the second one\r\n * will be ~30 seconds (with fuzzing).\r\n */\r\nvar LONG_RETRY_FACTOR = 30;\r\n/**\r\n * Base wait interval to multiplied by backoffFactor^backoffCount.\r\n */\r\nvar BASE_INTERVAL_MILLIS = 1000;\r\n/**\r\n * Stubbable retry data storage class.\r\n */\r\nvar RetryData = /** @class */ (function () {\r\n    function RetryData(throttleMetadata, intervalMillis) {\r\n        if (throttleMetadata === void 0) { throttleMetadata = {}; }\r\n        if (intervalMillis === void 0) { intervalMillis = BASE_INTERVAL_MILLIS; }\r\n        this.throttleMetadata = throttleMetadata;\r\n        this.intervalMillis = intervalMillis;\r\n    }\r\n    RetryData.prototype.getThrottleMetadata = function (appId) {\r\n        return this.throttleMetadata[appId];\r\n    };\r\n    RetryData.prototype.setThrottleMetadata = function (appId, metadata) {\r\n        this.throttleMetadata[appId] = metadata;\r\n    };\r\n    RetryData.prototype.deleteThrottleMetadata = function (appId) {\r\n        delete this.throttleMetadata[appId];\r\n    };\r\n    return RetryData;\r\n}());\r\nvar defaultRetryData = new RetryData();\r\n/**\r\n * Set GET request headers.\r\n * @param apiKey App API key.\r\n */\r\nfunction getHeaders(apiKey) {\r\n    return new Headers({\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\n/**\r\n * Fetches dynamic config from backend.\r\n * @param app Firebase app to fetch config for.\r\n */\r\nfunction fetchDynamicConfig(appFields) {\r\n    var _a;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appId, apiKey, request, appUrl, response, errorMessage, jsonResponse, _ignored_1;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    appId = appFields.appId, apiKey = appFields.apiKey;\r\n                    request = {\r\n                        method: 'GET',\r\n                        headers: getHeaders(apiKey)\r\n                    };\r\n                    appUrl = DYNAMIC_CONFIG_URL.replace('{app-id}', appId);\r\n                    return [4 /*yield*/, fetch(appUrl, request)];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!(response.status !== 200 && response.status !== 304)) return [3 /*break*/, 6];\r\n                    errorMessage = '';\r\n                    _b.label = 2;\r\n                case 2:\r\n                    _b.trys.push([2, 4, , 5]);\r\n                    return [4 /*yield*/, response.json()];\r\n                case 3:\r\n                    jsonResponse = (_b.sent());\r\n                    if ((_a = jsonResponse.error) === null || _a === void 0 ? void 0 : _a.message) {\r\n                        errorMessage = jsonResponse.error.message;\r\n                    }\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    _ignored_1 = _b.sent();\r\n                    return [3 /*break*/, 5];\r\n                case 5: throw ERROR_FACTORY.create(\"config-fetch-failed\" /* CONFIG_FETCH_FAILED */, {\r\n                    httpStatus: response.status,\r\n                    responseMessage: errorMessage\r\n                });\r\n                case 6: return [2 /*return*/, response.json()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Fetches dynamic config from backend, retrying if failed.\r\n * @param app Firebase app to fetch config for.\r\n */\r\nfunction fetchDynamicConfigWithRetry(app, \r\n// retryData and timeoutMillis are parameterized to allow passing a different value for testing.\r\nretryData, timeoutMillis) {\r\n    if (retryData === void 0) { retryData = defaultRetryData; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, appId, apiKey, measurementId, throttleMetadata, signal;\r\n        var _this = this;\r\n        return __generator(this, function (_b) {\r\n            _a = app.options, appId = _a.appId, apiKey = _a.apiKey, measurementId = _a.measurementId;\r\n            if (!appId) {\r\n                throw ERROR_FACTORY.create(\"no-app-id\" /* NO_APP_ID */);\r\n            }\r\n            if (!apiKey) {\r\n                if (measurementId) {\r\n                    return [2 /*return*/, {\r\n                            measurementId: measurementId,\r\n                            appId: appId\r\n                        }];\r\n                }\r\n                throw ERROR_FACTORY.create(\"no-api-key\" /* NO_API_KEY */);\r\n            }\r\n            throttleMetadata = retryData.getThrottleMetadata(appId) || {\r\n                backoffCount: 0,\r\n                throttleEndTimeMillis: Date.now()\r\n            };\r\n            signal = new AnalyticsAbortSignal();\r\n            setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n                    signal.abort();\r\n                    return [2 /*return*/];\r\n                });\r\n            }); }, timeoutMillis !== undefined ? timeoutMillis : FETCH_TIMEOUT_MILLIS);\r\n            return [2 /*return*/, attemptFetchDynamicConfigWithRetry({ appId: appId, apiKey: apiKey, measurementId: measurementId }, throttleMetadata, signal, retryData)];\r\n        });\r\n    });\r\n}\r\n/**\r\n * Runs one retry attempt.\r\n * @param appFields Necessary app config fields.\r\n * @param throttleMetadata Ongoing metadata to determine throttling times.\r\n * @param signal Abort signal.\r\n */\r\nfunction attemptFetchDynamicConfigWithRetry(appFields, _a, signal, retryData // for testing\r\n) {\r\n    var throttleEndTimeMillis = _a.throttleEndTimeMillis, backoffCount = _a.backoffCount;\r\n    if (retryData === void 0) { retryData = defaultRetryData; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appId, measurementId, e_1, response, e_2, backoffMillis, throttleMetadata;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    appId = appFields.appId, measurementId = appFields.measurementId;\r\n                    _b.label = 1;\r\n                case 1:\r\n                    _b.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, setAbortableTimeout(signal, throttleEndTimeMillis)];\r\n                case 2:\r\n                    _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    e_1 = _b.sent();\r\n                    if (measurementId) {\r\n                        logger.warn(\"Timed out fetching this Firebase app's measurement ID from the server.\" +\r\n                            (\" Falling back to the measurement ID \" + measurementId) +\r\n                            (\" provided in the \\\"measurementId\\\" field in the local Firebase config. [\" + e_1.message + \"]\"));\r\n                        return [2 /*return*/, { appId: appId, measurementId: measurementId }];\r\n                    }\r\n                    throw e_1;\r\n                case 4:\r\n                    _b.trys.push([4, 6, , 7]);\r\n                    return [4 /*yield*/, fetchDynamicConfig(appFields)];\r\n                case 5:\r\n                    response = _b.sent();\r\n                    // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                    retryData.deleteThrottleMetadata(appId);\r\n                    return [2 /*return*/, response];\r\n                case 6:\r\n                    e_2 = _b.sent();\r\n                    if (!isRetriableError(e_2)) {\r\n                        retryData.deleteThrottleMetadata(appId);\r\n                        if (measurementId) {\r\n                            logger.warn(\"Failed to fetch this Firebase app's measurement ID from the server.\" +\r\n                                (\" Falling back to the measurement ID \" + measurementId) +\r\n                                (\" provided in the \\\"measurementId\\\" field in the local Firebase config. [\" + e_2.message + \"]\"));\r\n                            return [2 /*return*/, { appId: appId, measurementId: measurementId }];\r\n                        }\r\n                        else {\r\n                            throw e_2;\r\n                        }\r\n                    }\r\n                    backoffMillis = Number(e_2.httpStatus) === 503\r\n                        ? calculateBackoffMillis(backoffCount, retryData.intervalMillis, LONG_RETRY_FACTOR)\r\n                        : calculateBackoffMillis(backoffCount, retryData.intervalMillis);\r\n                    throttleMetadata = {\r\n                        throttleEndTimeMillis: Date.now() + backoffMillis,\r\n                        backoffCount: backoffCount + 1\r\n                    };\r\n                    // Persists state.\r\n                    retryData.setThrottleMetadata(appId, throttleMetadata);\r\n                    logger.debug(\"Calling attemptFetch again in \" + backoffMillis + \" millis\");\r\n                    return [2 /*return*/, attemptFetchDynamicConfigWithRetry(appFields, throttleMetadata, signal, retryData)];\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise(function (resolve, reject) {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        var timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(function () {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis: throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof FirebaseError)) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    var httpStatus = Number(e['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Shims a minimal AbortSignal (copied from Remote Config).\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nvar AnalyticsAbortSignal = /** @class */ (function () {\r\n    function AnalyticsAbortSignal() {\r\n        this.listeners = [];\r\n    }\r\n    AnalyticsAbortSignal.prototype.addEventListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    AnalyticsAbortSignal.prototype.abort = function () {\r\n        this.listeners.forEach(function (listener) { return listener(); });\r\n    };\r\n    return AnalyticsAbortSignal;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction validateIndexedDB() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!!isIndexedDBAvailable()) return [3 /*break*/, 1];\r\n                    logger.warn(ERROR_FACTORY.create(\"indexeddb-unavailable\" /* INDEXEDDB_UNAVAILABLE */, {\r\n                        errorInfo: 'IndexedDB is not available in this environment.'\r\n                    }).message);\r\n                    return [2 /*return*/, false];\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, validateIndexedDBOpenable()];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    logger.warn(ERROR_FACTORY.create(\"indexeddb-unavailable\" /* INDEXEDDB_UNAVAILABLE */, {\r\n                        errorInfo: e_1\r\n                    }).message);\r\n                    return [2 /*return*/, false];\r\n                case 4: return [2 /*return*/, true];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Initialize the analytics instance in gtag.js by calling config command with fid.\r\n *\r\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\r\n * part of the `page_view` event that's sent during the initialization\r\n * @param app Firebase app\r\n * @param gtagCore The gtag function that's not wrapped.\r\n * @param dynamicConfigPromisesList Array of all dynamic config promises.\r\n * @param measurementIdToAppId Maps measurementID to appID.\r\n * @param installations FirebaseInstallations instance.\r\n *\r\n * @returns Measurement ID.\r\n */\r\nfunction initializeIds(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCore) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var dynamicConfigPromise, fidPromise, _a, dynamicConfig, fid, configProperties;\r\n        var _b;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    dynamicConfigPromise = fetchDynamicConfigWithRetry(app);\r\n                    // Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.\r\n                    dynamicConfigPromise\r\n                        .then(function (config) {\r\n                        measurementIdToAppId[config.measurementId] = config.appId;\r\n                        if (app.options.measurementId &&\r\n                            config.measurementId !== app.options.measurementId) {\r\n                            logger.warn(\"The measurement ID in the local Firebase config (\" + app.options.measurementId + \")\" +\r\n                                (\" does not match the measurement ID fetched from the server (\" + config.measurementId + \").\") +\r\n                                \" To ensure analytics events are always sent to the correct Analytics property,\" +\r\n                                \" update the\" +\r\n                                \" measurement ID field in the local config or remove it from the local config.\");\r\n                        }\r\n                    })\r\n                        .catch(function (e) { return logger.error(e); });\r\n                    // Add to list to track state of all dynamic config promises.\r\n                    dynamicConfigPromisesList.push(dynamicConfigPromise);\r\n                    fidPromise = validateIndexedDB().then(function (envIsValid) {\r\n                        if (envIsValid) {\r\n                            return installations.getId();\r\n                        }\r\n                        else {\r\n                            return undefined;\r\n                        }\r\n                    });\r\n                    return [4 /*yield*/, Promise.all([\r\n                            dynamicConfigPromise,\r\n                            fidPromise\r\n                        ])];\r\n                case 1:\r\n                    _a = _c.sent(), dynamicConfig = _a[0], fid = _a[1];\r\n                    // This command initializes gtag.js and only needs to be called once for the entire web app,\r\n                    // but since it is idempotent, we can call it multiple times.\r\n                    // We keep it together with other initialization logic for better code structure.\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    gtagCore('js', new Date());\r\n                    configProperties = (_b = {},\r\n                        // guard against developers accidentally setting properties with prefix `firebase_`\r\n                        _b[ORIGIN_KEY] = 'firebase',\r\n                        _b.update = true,\r\n                        _b);\r\n                    if (fid != null) {\r\n                        configProperties[GA_FID_KEY] = fid;\r\n                    }\r\n                    // It should be the first config command called on this GA-ID\r\n                    // Initialize this GA-ID and set FID on it using the gtag config API.\r\n                    gtagCore(GtagCommand.CONFIG, dynamicConfig.measurementId, configProperties);\r\n                    return [2 /*return*/, dynamicConfig.measurementId];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Maps appId to full initialization promise. Wrapped gtag calls must wait on\r\n * all or some of these, depending on the call's `send_to` param and the status\r\n * of the dynamic config fetches (see below).\r\n */\r\nvar initializationPromisesMap = {};\r\n/**\r\n * List of dynamic config fetch promises. In certain cases, wrapped gtag calls\r\n * wait on all these to be complete in order to determine if it can selectively\r\n * wait for only certain initialization (FID) promises or if it must wait for all.\r\n */\r\nvar dynamicConfigPromisesList = [];\r\n/**\r\n * Maps fetched measurementIds to appId. Populated when the app's dynamic config\r\n * fetch completes. If already populated, gtag config calls can use this to\r\n * selectively wait for only this app's initialization promise (FID) instead of all\r\n * initialization promises.\r\n */\r\nvar measurementIdToAppId = {};\r\n/**\r\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\r\n */\r\nvar dataLayerName = 'dataLayer';\r\n/**\r\n * Name for window global gtag function used by GA: defaults to 'gtag'.\r\n */\r\nvar gtagName = 'gtag';\r\n/**\r\n * Reproduction of standard gtag function or reference to existing\r\n * gtag function on window object.\r\n */\r\nvar gtagCoreFunction;\r\n/**\r\n * Wrapper around gtag function that ensures FID is sent with all\r\n * relevant event and config calls.\r\n */\r\nvar wrappedGtagFunction;\r\n/**\r\n * Flag to ensure page initialization steps (creation or wrapping of\r\n * dataLayer and gtag script) are only run once per page load.\r\n */\r\nvar globalInitDone = false;\r\n/**\r\n * For testing\r\n */\r\nfunction resetGlobalVars(newGlobalInitDone, newInitializationPromisesMap, newDynamicPromises) {\r\n    if (newGlobalInitDone === void 0) { newGlobalInitDone = false; }\r\n    if (newInitializationPromisesMap === void 0) { newInitializationPromisesMap = {}; }\r\n    if (newDynamicPromises === void 0) { newDynamicPromises = []; }\r\n    globalInitDone = newGlobalInitDone;\r\n    initializationPromisesMap = newInitializationPromisesMap;\r\n    dynamicConfigPromisesList = newDynamicPromises;\r\n    dataLayerName = 'dataLayer';\r\n    gtagName = 'gtag';\r\n}\r\n/**\r\n * For testing\r\n */\r\nfunction getGlobalVars() {\r\n    return {\r\n        initializationPromisesMap: initializationPromisesMap,\r\n        dynamicConfigPromisesList: dynamicConfigPromisesList\r\n    };\r\n}\r\n/**\r\n * This must be run before calling firebase.analytics() or it won't\r\n * have any effect.\r\n * @param options Custom gtag and dataLayer names.\r\n */\r\nfunction settings(options) {\r\n    if (globalInitDone) {\r\n        throw ERROR_FACTORY.create(\"already-initialized\" /* ALREADY_INITIALIZED */);\r\n    }\r\n    if (options.dataLayerName) {\r\n        dataLayerName = options.dataLayerName;\r\n    }\r\n    if (options.gtagName) {\r\n        gtagName = options.gtagName;\r\n    }\r\n}\r\n/**\r\n * Returns true if no environment mismatch is found.\r\n * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT\r\n * error that also lists details for each mismatch found.\r\n */\r\nfunction warnOnBrowserContextMismatch() {\r\n    var mismatchedEnvMessages = [];\r\n    if (isBrowserExtension()) {\r\n        mismatchedEnvMessages.push('This is a browser extension environment.');\r\n    }\r\n    if (!areCookiesEnabled()) {\r\n        mismatchedEnvMessages.push('Cookies are not available.');\r\n    }\r\n    if (mismatchedEnvMessages.length > 0) {\r\n        var details = mismatchedEnvMessages\r\n            .map(function (message, index) { return \"(\" + (index + 1) + \") \" + message; })\r\n            .join(' ');\r\n        var err = ERROR_FACTORY.create(\"invalid-analytics-context\" /* INVALID_ANALYTICS_CONTEXT */, {\r\n            errorInfo: details\r\n        });\r\n        logger.warn(err.message);\r\n    }\r\n}\r\nfunction factory(app, installations) {\r\n    warnOnBrowserContextMismatch();\r\n    var appId = app.options.appId;\r\n    if (!appId) {\r\n        throw ERROR_FACTORY.create(\"no-app-id\" /* NO_APP_ID */);\r\n    }\r\n    if (!app.options.apiKey) {\r\n        if (app.options.measurementId) {\r\n            logger.warn(\"The \\\"apiKey\\\" field is empty in the local Firebase config. This is needed to fetch the latest\" +\r\n                (\" measurement ID for this Firebase app. Falling back to the measurement ID \" + app.options.measurementId) +\r\n                \" provided in the \\\"measurementId\\\" field in the local Firebase config.\");\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"no-api-key\" /* NO_API_KEY */);\r\n        }\r\n    }\r\n    if (initializationPromisesMap[appId] != null) {\r\n        throw ERROR_FACTORY.create(\"already-exists\" /* ALREADY_EXISTS */, {\r\n            id: appId\r\n        });\r\n    }\r\n    if (!globalInitDone) {\r\n        // Steps here should only be done once per page: creation or wrapping\r\n        // of dataLayer and global gtag function.\r\n        // Detect if user has already put the gtag <script> tag on this page.\r\n        if (!findGtagScriptOnPage()) {\r\n            insertScriptTag(dataLayerName);\r\n        }\r\n        getOrCreateDataLayer(dataLayerName);\r\n        var _a = wrapOrCreateGtag(initializationPromisesMap, dynamicConfigPromisesList, measurementIdToAppId, dataLayerName, gtagName), wrappedGtag = _a.wrappedGtag, gtagCore = _a.gtagCore;\r\n        wrappedGtagFunction = wrappedGtag;\r\n        gtagCoreFunction = gtagCore;\r\n        globalInitDone = true;\r\n    }\r\n    // Async but non-blocking.\r\n    // This map reflects the completion state of all promises for each appId.\r\n    initializationPromisesMap[appId] = initializeIds(app, dynamicConfigPromisesList, measurementIdToAppId, installations, gtagCoreFunction);\r\n    var analyticsInstance = {\r\n        app: app,\r\n        // Public methods return void for API simplicity and to better match gtag,\r\n        // while internal implementations return promises.\r\n        logEvent: function (eventName, eventParams, options) {\r\n            logEvent(wrappedGtagFunction, initializationPromisesMap[appId], eventName, eventParams, options).catch(function (e) { return logger.error(e); });\r\n        },\r\n        setCurrentScreen: function (screenName, options) {\r\n            setCurrentScreen(wrappedGtagFunction, initializationPromisesMap[appId], screenName, options).catch(function (e) { return logger.error(e); });\r\n        },\r\n        setUserId: function (id, options) {\r\n            setUserId(wrappedGtagFunction, initializationPromisesMap[appId], id, options).catch(function (e) { return logger.error(e); });\r\n        },\r\n        setUserProperties: function (properties, options) {\r\n            setUserProperties(wrappedGtagFunction, initializationPromisesMap[appId], properties, options).catch(function (e) { return logger.error(e); });\r\n        },\r\n        setAnalyticsCollectionEnabled: function (enabled) {\r\n            setAnalyticsCollectionEnabled(initializationPromisesMap[appId], enabled).catch(function (e) { return logger.error(e); });\r\n        },\r\n        INTERNAL: {\r\n            delete: function () {\r\n                delete initializationPromisesMap[appId];\r\n                return Promise.resolve();\r\n            }\r\n        }\r\n    };\r\n    return analyticsInstance;\r\n}\n\nvar name = \"@firebase/analytics\";\nvar version = \"0.6.0\";\n\n/**\r\n * Type constant for Firebase Analytics.\r\n */\r\nvar ANALYTICS_TYPE = 'analytics';\r\nfunction registerAnalytics(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(ANALYTICS_TYPE, function (container) {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factory(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */).setServiceProps({\r\n        settings: settings,\r\n        EventName: EventName,\r\n        isSupported: isSupported\r\n    }));\r\n    instance.INTERNAL.registerComponent(new Component('analytics-internal', internalFactory, \"PRIVATE\" /* PRIVATE */));\r\n    instance.registerVersion(name, version);\r\n    function internalFactory(container) {\r\n        try {\r\n            var analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();\r\n            return {\r\n                logEvent: analytics.logEvent\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ERROR_FACTORY.create(\"interop-component-reg-failed\" /* INTEROP_COMPONENT_REG_FAILED */, {\r\n                reason: e\r\n            });\r\n        }\r\n    }\r\n}\r\nregisterAnalytics(firebase);\r\n/**\r\n * this is a public static method provided to users that wraps four different checks:\r\n *\r\n * 1. check if it's not a browser extension environment.\r\n * 1. check if cookie is enabled in current browser.\r\n * 3. check if IndexedDB is supported by the browser environment.\r\n * 4. check if the current browser context is valid for using IndexedDB.\r\n *\r\n */\r\nfunction isSupported() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var isDBOpenable, error_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (isBrowserExtension()) {\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    if (!areCookiesEnabled()) {\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    if (!isIndexedDBAvailable()) {\r\n                        return [2 /*return*/, false];\r\n                    }\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, validateIndexedDBOpenable()];\r\n                case 2:\r\n                    isDBOpenable = _a.sent();\r\n                    return [2 /*return*/, isDBOpenable];\r\n                case 3:\r\n                    error_1 = _a.sent();\r\n                    return [2 /*return*/, false];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\nexport { factory, getGlobalVars, registerAnalytics, resetGlobalVars, settings };\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}